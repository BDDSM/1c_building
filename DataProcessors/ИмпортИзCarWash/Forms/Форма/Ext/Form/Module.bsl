
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// todo: после отладки убрать
	Сервер = "146.66.14.82";
	Порт = 8081;
	Пользователь = "admin";
	Пароль = "admin";
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Импорт(Команда)
	
	ЗапуститьИмпортДанных(Сервер, Порт, Пользователь, Пароль);
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗапуститьИмпортДанных(Сервер, Порт, Пользователь, Пароль)
	
	Соединение = Новый HTTPСоединение(Сервер, Число(Порт), Пользователь, Пароль);
	
	// Обработчики (см. модуль менеджера обработки ИмпортИзCarWash)
	Обработчики = Новый Соответствие();		
	Обработчики.Вставить(Метаданные.Справочники.ЕдиницыИзмерения, 
		ДанныеОбработчика(ИмпортЕдиницыИзмерения, "Импорт_ЕдиницыИзмерения"));
		
	Обработчики.Вставить(Метаданные.Справочники.Города,
		ДанныеОбработчика(ИмпортГорода, "Импорт_Города"));
		
	Обработчики.Вставить(Метаданные.Справочники.ГруппыКонтрагентов,
		ДанныеОбработчика(ИмпортГруппыКонтрагентов, "Импорт_ГруппыКонтрагентов"));
		
	Обработчики.Вставить(Метаданные.Справочники.Номенклатура,
		ДанныеОбработчика(ИмпортНоменклатура, "Импорт_Номенклатура"));
		
	Обработчики.Вставить(Метаданные.Справочники.Комплекты,
		ДанныеОбработчика(ИмпортКомплекты, "Импорт_Комплекты"));
							
	// Обработка
	Для Каждого Обработчик Из Обработчики Цикл
		ДанныеОбработчика = Обработчик.Значение;			
		Если ДанныеОбработчика.Загружать Тогда
			ТекстОшибки = Неопределено;
			Результат = Вычислить(СтрШаблон("Обработки.ИмпортИзCarWash.%1(Соединение, ТекстОшибки)", ДанныеОбработчика.ИмяМетода));
			Если Результат Тогда
				Сообщить(Обработчик.Ключ.Синоним + ": ОК");
			Иначе
				Сообщить(Обработчик.Ключ.Синоним + ": Ошибка. " + ТекстОшибки, СтатусСообщения.Внимание);
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;
				
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеОбработчика(Загружать, ИмяМетода)
	
	Возврат Новый Структура("Загружать, ИмяМетода", Загружать, ИмяМетода);	
	
КонецФункции

#КонецОбласти