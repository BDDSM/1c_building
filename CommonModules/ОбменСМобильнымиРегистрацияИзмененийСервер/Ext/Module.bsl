
// Выполняет регистрацию изменений одного переданного элемента данных
Процедура ВыполнитьРегистрациюДанных(МобильныйКлиент, ПараметрыСинхронизации, МассивДляРегистрации) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Для каждого Элемент Из МассивДляРегистрации Цикл
		Попытка
			ПланыОбмена.ЗарегистрироватьИзменения(МобильныйКлиент, Элемент);

			//ОбменСМобильнымиСервер.ЗаписатьПодробнуюИнформациюОСобытииОбмена(
			//	ПараметрыСинхронизации, 
			//	МобильныйКлиент, 
			//	Элемент,
			//	НСтр("ru = 'Объект зарегистрирован для выгрузки'"));
		Исключение
			Инфо = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Регистрация изменений для мобильного'"), 
				УровеньЖурналаРегистрации.Ошибка,
				, Элемент, ПодробноеПредставлениеОшибки(Инфо));
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

// Удаляет регистрацию изменений после формирования сообщения обмена.
//
// Параметры:
//  МобильныйКлиент - ПланОбменаСсылка.Мобильный - Узел обмена с клиентом обмена;
//  МассивДанныхДляПередачиНаМобильныйКлиент - Массив - Данные успешно помещенные в сообщение обмена;
//  ПараметрыСинхронизации					 - Структура - Кэш параметров обмена.
//
Процедура УдалитьРегистрациюИзмененийПослеФормированияСообщения(МобильныйКлиент, 
	МассивДанныхДляПередачиНаМобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	РегистрыСведений.ПротоколРаботыСМобильнымиКлиентами.ДобавитьИнформацию(
		НСтр("ru = 'Начало удаления регистрации изменений.'"),
		Ложь,
		МобильныйКлиент);

	Для Каждого ЭлементМассива Из МассивДанныхДляПередачиНаМобильныйКлиент Цикл

		Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
			ЭлементДанных = ЭлементМассива.Ссылка;
		Иначе
			ЭлементДанных = ЭлементМассива;
		КонецЕсли;

		Попытка 
			МетаданныеОбъекта = ЭлементДанных.Метаданные();
		Исключение
			МетаданныеОбъекта = Неопределено;
		КонецПопытки;

		// В массив может попасть объект, который не находится в составе обмена.
		// Такие объекты нужно пропустить.
		Если Не Метаданные = Неопределено 
			И Не Метаданные.ПланыОбмена.Мобильный.Состав.Найти(МетаданныеОбъекта) = Неопределено Тогда

			ПланыОбмена.УдалитьРегистрациюИзменений(МобильныйКлиент, ЭлементДанных);

			// todo
			//ОбменСМобильнымиСервер.ЗаписатьПодробнуюИнформациюОСобытииОбмена(ПараметрыСинхронизации, МобильныйКлиент, 
			//	ЭлементДанных, НСтр("ru = 'Регистрация изменений удалена.'"));
		КонецЕсли;

	КонецЦикла;

	РегистрыСведений.ПротоколРаботыСМобильнымиКлиентами.ДобавитьИнформацию(
		НСтр("ru = 'Удаление регистрации изменений завершено.'"),
		Ложь,
		МобильныйКлиент);

КонецПроцедуры 






#Область РегистрацияДанныхПриПервомПодключении

Функция ЗарегистрироватьВсеОбъектыДляПервичнойЗагрузки(МобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	// Справочники
	
	ЗарегистрироватьГородаДляПервичнойЗагрузки(
		МобильныйКлиент, ПараметрыСинхронизации);
		
	ЗарегистрироватьОбъектыСтроительстваДляПервичнойЗагрузки(
		МобильныйКлиент, ПараметрыСинхронизации);
		
	ЗарегистрироватьКонтрагентовДляПервичнойЗагрузки(
		МобильныйКлиент, ПараметрыСинхронизации);
		
	ЗарегистрироватьСтатьиРасходовДляПервичнойЗагрузки(
		МобильныйКлиент, ПараметрыСинхронизации);
				
	// Документы
		
	ЗарегистрироватьСписанияДСДляПервичнойЗагрузки(
		МобильныйКлиент, ПараметрыСинхронизации);

КонецФункции

// Справочники

Функция ЗарегистрироватьГородаДляПервичнойЗагрузки(МобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыРегистрации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Города КАК ОбъектыРегистрации";
	
	МассивДанныхДляРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ЗарегистрироватьОбъекты(
		МассивДанныхДляРегистрации, МобильныйКлиент, ПараметрыСинхронизации, НСтр("ru = 'Города'"));	
	
КонецФункции

Функция ЗарегистрироватьОбъектыСтроительстваДляПервичнойЗагрузки(МобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыРегистрации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Объекты КАК ОбъектыРегистрации
		|ГДЕ
		|	НЕ ОбъектыРегистрации.ЭтоГруппа";
	
	МассивДанныхДляРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ЗарегистрироватьОбъекты(
		МассивДанныхДляРегистрации, МобильныйКлиент, ПараметрыСинхронизации, НСтр("ru = 'Объекты строительства'"));	
		
КонецФункции
	
Функция ЗарегистрироватьКонтрагентовДляПервичнойЗагрузки(МобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыРегистрации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК ОбъектыРегистрации";
	
	МассивДанныхДляРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ЗарегистрироватьОбъекты(
		МассивДанныхДляРегистрации, МобильныйКлиент, ПараметрыСинхронизации, НСтр("ru = 'Контрагенты'"));
		
КонецФункции

Функция ЗарегистрироватьСтатьиРасходовДляПервичнойЗагрузки(МобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыРегистрации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатьиРасходов КАК ОбъектыРегистрации";
	
	МассивДанныхДляРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ЗарегистрироватьОбъекты(
		МассивДанныхДляРегистрации, МобильныйКлиент, ПараметрыСинхронизации, НСтр("ru = 'Статьи расходов'"));
		
КонецФункции

// Документы

Функция ЗарегистрироватьСписанияДСДляПервичнойЗагрузки(МобильныйКлиент, ПараметрыСинхронизации) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыРегистрации.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СписаниеДенежныхСредств КАК ОбъектыРегистрации";
	
	МассивДанныхДляРегистрации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ЗарегистрироватьОбъекты(
		МассивДанныхДляРегистрации, МобильныйКлиент, ПараметрыСинхронизации, НСтр("ru = 'Списания денежных средств'"));
	
КонецФункции

// Регистрация объектов для первичной загрузки
//
// Параметры:
//  ОбъектыДляРегистрации	 - Массив - 
//  МобильныйКлиент			 - 	 - 
//  ПараметрыСинхронизации	 - 	 - 
//  НазваниеОбъектов		 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ЗарегистрироватьОбъекты(ОбъектыДляРегистрации, МобильныйКлиент, 
	ПараметрыСинхронизации, НазваниеОбъектов = Неопределено)
	
	РегистрыСведений.ПротоколРаботыСМобильнымиКлиентами.ДобавитьИнформацию(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(	
			НСтр("ru = 'Подготовка объектов ""%1"" для первой загрузки'"), НазваниеОбъектов),
		Ложь, МобильныйКлиент);

	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ВыполнитьРегистрациюДанных(
		МобильныйКлиент, ПараметрыСинхронизации, ОбъектыДляРегистрации);

	ВсегоОбъектов = ОбъектыДляРегистрации.Количество();
	РегистрыСведений.ПротоколРаботыСМобильнымиКлиентами.ДобавитьИнформацию(
		СтрШаблон(
			НСтр("ru = 'Подготовка объектов ""%1"" для первой загрузки завершена (%2 обьектов)'"), НазваниеОбъектов, ВсегоОбъектов),
		Ложь, МобильныйКлиент);

	Возврат Истина;	
	
КонецФункции

#КонецОбласти
