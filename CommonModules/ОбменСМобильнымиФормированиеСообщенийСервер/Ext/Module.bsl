
#Область ПрограммныйИнтерфейс

// Формирует представление указанного элемента данных в виде XML в указанной версии формата обмена.
//
// Параметры:
//  ЗаписьXML				 - ЗаписьXML - Объект записи данных в файл;
//  ВерсияСервиса			 - Строка - Используемая версия формата обмена;
//  ПараметрыСинхронизации	 - Структура - Кэш параметров обмена;
//  ЭлементДанных			 - Произвольный - Выгружаемый объект;
//  КакПредмет				 - Булево - Признак принудительной выгрузки объекта.
//
Процедура ПолучитьИзОбъекта(Сообщение, ПараметрыСинхронизации, ЭлементДанных, КакПредмет = Ложь) Экспорт

	Если ЭлементДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Сообщение = Неопределено Тогда
		Сообщение = Новый Структура();
	КонецЕсли;
	
	ТипЗначенияОбъекта = ТипЗнч(ЭлементДанных);
	
	Если ТипЗначенияОбъекта = Тип("ИнформацияОбОшибке") Тогда
		ВыгрузитьИнформациюОбОшибке(Сообщение, ЭлементДанных);

	ИначеЕсли ТипЗначенияОбъекта = Тип("Структура") Тогда		
		Если Не Сообщение.Свойство("Objects") Тогда
			Сообщение.Вставить("Objects", Новый Массив());
		КонецЕсли;
		
		// Справочники		
		Если ТипЗнч(ЭлементДанных.Ссылка) = Тип("СправочникСсылка.Города") Тогда
			ВыгрузитьГород(Сообщение, ЭлементДанных.Ссылка);
			
		ИначеЕсли ТипЗнч(ЭлементДанных.Ссылка) = Тип("СправочникСсылка.Объекты") Тогда
			ВыгрузитьОбъектСтроительства(Сообщение, ЭлементДанных.Ссылка);	
			
		ИначеЕсли ТипЗнч(ЭлементДанных.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
			ВыгрузитьКонтрагента(Сообщение, ЭлементДанных.Ссылка);
			
		ИначеЕсли ТипЗнч(ЭлементДанных.Ссылка) = Тип("СправочникСсылка.СтатьиРасходов") Тогда
			ВыгрузитьСтатьюРасходов(Сообщение, ЭлементДанных.Ссылка);
			
		// Документы
		ИначеЕсли ТипЗнч(ЭлементДанных.Ссылка) = Тип("ДокументСсылка.СписаниеДенежныхСредств") Тогда
			ВыгрузитьСписаниеДенежныхСредств(Сообщение, ЭлементДанных.Ссылка);
		
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Получение объектов типа (%1) не реализовано'"), Строка(ТипЗнч(ЭлементДанных.Ссылка)));			
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииВыгрузкиДанных

Процедура ВыгрузитьИнформациюОбОшибке(Сообщение, ЭлементДанных)

	// Подготовка данных
	ТипЗаписи = "Error";
	Если СтрНайти(ЭлементДанных.Описание, "info:") Тогда
		ТипЗаписи = "Information";
	ИначеЕсли СтрНайти(ЭлементДанных.Описание, "warning:") Тогда
		ТипЗаписи = "Warning";
	КонецЕсли;

	ОписаниеОшибки = ЭлементДанных.Описание;
	ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "info:", "");
	ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "warning:", "");

	Если СтрСравнить(ТипЗаписи, "Error") = 0 Тогда

		ПодробноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ЭлементДанных);
		ПодробноеОписаниеОшибки = СтрЗаменить(ПодробноеОписаниеОшибки, "info:", "");
		ПодробноеОписаниеОшибки = СтрЗаменить(ПодробноеОписаниеОшибки, "warning:", "");

		ОписаниеОшибки = СтрШаблон(
			НСтр("ru = 'При синхронизации на сервере произошла ошибка:
				|%1
				|
				|#Текст ошибки (для администратора):#
				|%2'"),
			ОписаниеОшибки,
			ПодробноеОписаниеОшибки);

	КонецЕсли;

	Сообщение.Вставить("LogRecord", 
		Новый Структура("RecordType, Description", ТипЗаписи, ОписаниеОшибки)); 
	
КонецПроцедуры

#Область ВыгрузкаСправочников

Процедура ВыгрузитьГород(Сообщение, ЭлементДанных)
	
	Если Не ЗначениеЗаполнено(ЭлементДанных) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура("Тип, UUID, Код, Наименование");	
	СтруктураДанных.Тип = ОбменСМобильнымиКлиентСервер.Сущность_Город();
	
	СтруктураДанных.UUID = XMLСтрока(ЭлементДанных);	
	СтруктураДанных.Код = ЭлементДанных.Код;
	СтруктураДанных.Наименование = ЭлементДанных.Наименование;
	
	Сообщение.Objects.Добавить(СтруктураДанных);
		
КонецПроцедуры

Процедура ВыгрузитьОбъектСтроительства(Сообщение, ЭлементДанных)
	
	Если Не ЗначениеЗаполнено(ЭлементДанных) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура("Тип, UUID, Код, Наименование");	
	СтруктураДанных.Тип = ОбменСМобильнымиКлиентСервер.Сущность_ОбъектСтроительства();
	
	СтруктураДанных.UUID = XMLСтрока(ЭлементДанных);	
	СтруктураДанных.Код = ЭлементДанных.Код;
	СтруктураДанных.Наименование = ЭлементДанных.Наименование;
	
	Сообщение.Objects.Добавить(СтруктураДанных);
	
КонецПроцедуры

Процедура ВыгрузитьКонтрагента(Сообщение, ЭлементДанных)
	
	Если Не ЗначениеЗаполнено(ЭлементДанных) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура("Тип, UUID, Код, Наименование");	
	СтруктураДанных.Тип = ОбменСМобильнымиКлиентСервер.Сущность_Контрагент();
	
	СтруктураДанных.UUID = XMLСтрока(ЭлементДанных);	
	СтруктураДанных.Код = ЭлементДанных.Код;
	СтруктураДанных.Наименование = ЭлементДанных.Наименование;
	
	Сообщение.Objects.Добавить(СтруктураДанных);
		
КонецПроцедуры

Процедура ВыгрузитьСтатьюРасходов(Сообщение, ЭлементДанных)
	
	Если Не ЗначениеЗаполнено(ЭлементДанных) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура("Тип, UUID, Код, Наименование");	
	СтруктураДанных.Тип = ОбменСМобильнымиКлиентСервер.Сущность_СтатьяРасходов();
	
	СтруктураДанных.UUID = XMLСтрока(ЭлементДанных);	
	СтруктураДанных.Код = ЭлементДанных.Код;
	СтруктураДанных.Наименование = ЭлементДанных.Наименование;
	
	Сообщение.Objects.Добавить(СтруктураДанных);
		
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаДокументов

Процедура ВыгрузитьСписаниеДенежныхСредств(Сообщение, ЭлементДанных)
	
	Если Не ЗначениеЗаполнено(ЭлементДанных) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура(
		"Тип, 
		|UUID, 
		|Дата, 
		|Номер, 
		|Проведен,
		|ПометкаУдаления,
		|Объект, 
		|Контрагент, 
		|ТипПлатежа,
		|Сумма,
		|СтатьяРасходов,
		|Комментарий,
		|Ответственный");
			
	СтруктураДанных.Тип = ОбменСМобильнымиКлиентСервер.Сущность_СписаниеДС();
	СтруктураДанных.UUID = XMLСтрока(ЭлементДанных);
	СтруктураДанных.Дата = XMLСтрока(ЭлементДанных.Дата);
	СтруктураДанных.Номер = XMLСтрока(ЭлементДанных.Номер);
	СтруктураДанных.Проведен = ЭлементДанных.Проведен;
	СтруктураДанных.ПометкаУдаления = ЭлементДанных.ПометкаУдаления;
	
	СтруктураДанных.Объект = Новый Структура("Тип, UUID, Код, Наименование",
		ОбменСМобильнымиКлиентСервер.Сущность_ОбъектСтроительства(),
		XMLСтрока(ЭлементДанных.Объект),
		ЭлементДанных.Объект.Код,
		ЭлементДанных.Объект.Наименование);
		
	СтруктураДанных.Контрагент = Новый Структура("Тип, UUID, Код, Наименование",
		ОбменСМобильнымиКлиентСервер.Сущность_Контрагент(),
		XMLСтрока(ЭлементДанных.Контрагент),
		ЭлементДанных.Контрагент.Код,
		ЭлементДанных.Контрагент.Наименование);
		
	СтруктураДанных.ТипПлатежа = XMLСтрока(ЭлементДанных.ТипПлатежа);
	СтруктураДанных.Сумма = ЭлементДанных.Сумма;

	СтруктураДанных.СтатьяРасходов = Новый Структура("Тип, UUID, Код, Наименование",
		ОбменСМобильнымиКлиентСервер.Сущность_СтатьяРасходов(),
		XMLСтрока(ЭлементДанных.СтатьяРасходов),
		ЭлементДанных.СтатьяРасходов.Код,
		ЭлементДанных.СтатьяРасходов.Наименование);
				
	СтруктураДанных.Комментарий = ЭлементДанных.Комментарий;
	
	// todo: синхронизация пользователей? Пока просто строка
	СтруктураДанных.Ответственный = Строка(ЭлементДанных.Ответственный);
			
	Сообщение.Objects.Добавить(СтруктураДанных);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
